name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release? 1 = yes, 0 = no'
        default: '0'
        required: true
        type: string

jobs:
  build_wheels:
    name: ${{ matrix.os }} Python=${{ matrix.pyver }} CUDA=${{ matrix.cuda }} CPU_INSTRUCT=${{ matrix.instruct }} Torch=${{ matrix.torch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-20.04, pyver: '3.11', cuda: '12.1.0', torch: '2.3.1', cudaarch: '8.0;8.6;8.7;8.9;9.0+PTX', instruct: 'AVX2', torch_cu: '121'}

    steps:
      - uses: actions/checkout@v3

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.1
        if: runner.os == 'Linux'
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: true

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyver }}

      - name: check_space
        run: |
          if [ "$(uname)" == "Linux" ]; then df -h; fi
          if [ "$(uname)" == "Darwin" ]; then df -h; fi

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Mamba
        if: matrix.cuda != ''
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: "ktransformers"
          python-version: ${{ matrix.pyver }}
          miniforge-variant: Miniforge3
          miniforge-version: latest
          use-mamba: true
          add-pip-as-python-dependency: true
          auto-activate-base: false

      - name: build web
        run: |
          cd ktransformers/website/
          npm install
          npm run build
          cd ../../

      - name: build for cuda
        if: matrix.cuda != ''
        run: |
          git submodule init
          git submodule update
          mamba install -y -c nvidia/label/cuda-${{ matrix.cuda }} cuda-toolkit cuda-runtime
          python -m pip install torch==${{ matrix.torch }} torchvision torchaudio --index-url https://download.pytorch.org/whl/cu${{ matrix.torch_cu }}
          python -m pip install cpufeature build wheel ninja packaging setuptools
          python -m build --no-isolation --verbose

      - name: create Release dir
        run: |
          # 当前日期
          DATE=$(date +%Y-%m-%d)
          
          # 配置 SSH 密钥
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # 添加远程主机 SSH 公钥
          ssh-keyscan -H ${{ secrets.SSH_SERVER }} >> ~/.ssh/known_hosts
          
          # 创建远程目录
          ssh -p 22 root@${{ secrets.SSH_SERVER }} "mkdir -p /mnt/data/release-$DATE"
          
          # 上传文件
          scp -P 22 dist/*.whl root@${{ secrets.SSH_SERVER }}:/mnt/data/release-$DATE/
